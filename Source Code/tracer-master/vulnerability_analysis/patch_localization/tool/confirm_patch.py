#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
-----------------------------------------
@Created: 2020/11/13
------------------------------------------
@Modify: 2020/11/13
------------------------------------------
@Description:

用于过滤patch收集结果：

1。 非 code change, 而是文档记录；but not code change, it's doc/pom update/note。
    add/record/notes .....html / md / xml/ txt / txt.asc/ adoc/ 无后缀
"""

import os,sys,re
_PROJECT_NAME = 'VulnerabilityAnalysis'
_CURRENT_ABSPATH = os.path.abspath(__file__)
sys.path.insert(0, _CURRENT_ABSPATH[:_CURRENT_ABSPATH.find(_PROJECT_NAME) + len(_PROJECT_NAME) + 1])

import json
import logging
import time
import requests
import re

from vulnerability_analysis.utility import file_processing, json_processing, github_util, re_util
from vulnerability_analysis.utility import parse_github_commit_util as parse_github_commit
from vulnerability_analysis.utility import parse_other_git_format_util as parse_other_git_format
# from vulnerability_analysis.DR010.parse_patch import parse_github_commit

# ？？ .shared / ..conf/ .tmpl /.WIN https://github.com/openssl/openssl/commit/b15a19c148384e73338aa7c5b12652138e35ed28, https://github.com/openssl/openssl/commit/e32bc855a81a2d48d215c506bdeb4f598045f7e9
# .coffee: https://github.com/Clever/saml2/commit/3546cb61fd541f219abda364c5b919633609ef3d
# .ts: https://github.com/rhysd/Shiba/commit/e8a65b0f81eb04903eedd29500d7e1bedf249eab
# pl: https://github.com/ImageMagick/ImageMagick/commit/3cbfb163cff9e5b8cdeace8312e9bfee810ed02b
# as: https://github.com/zeroclipboard/zeroclipboard/commit/51b67b6d696f62aaf003210c08542588222c4913
# c#: cs , rb:'https://github.com/MarkusQ/puppet/commit/0e9db34ba0afe0ea0bee3afd005a011e3099d055'
# .h .m: https://github.com/AFNetworking/AFNetworking/commit/3e631b203dd95bb82dfbcc2c47a2d84b59d1eeb4
# .ts: https://github.com/keystonejs/keystone/commit/4b019b8cfcb7bea6f800609da5d07e8c8abfc80a
# mjs: https://github.com/gchq/CyberChef/commit/01f0625d6a177f9c5df9281f12a27c814c2d8bcf
# .twig: https://github.com/firefly-iii/firefly-iii/commit/2ddf48f15cbdbb475221c299872420f625c3bc3f
# htaccess: https://github.com/intelliants/subrion/commit/cb10ac2294cb2c3a6d2159f9a2bb8c58a2a10a47
# .tpl: https://github.com/intelliants/subrion/commit/a33a224c6c9e25144d828f92f6141c719215094b
# .kt: https://github.com/ktorio/ktor/commit/0c108156f45423d09014b47be810188629cb878f
# scala: https://github.com/spray/spray-json/commit/855b35e6d65079085d580ab3063637d94c8f3e0a
# .s https://github.com/golang/go/commit/9294fa2749ffee7edbbb817a0ef9fe633136fa9c#diff-85772c71438acb5fb01065a6aacca9411f81a807b13230d3592bc5fb498fda9a
# .erb https://github.com/doorkeeper-gem/doorkeeper/commit/39916a613b7dcc738aa38f7a17e1de9757bd0754
suffix_list = ['java','py','c','cc','cpp','cxx','c++','js','go','rb','cs','as','php','pl','coffee',
               'h','m','ts','mjs','twig','htaccess','tpl','kt','scala','s','erb']
suffix_list = ['java', 'py', 'c', 'cc', 'cpp', 'cxx', 'c++', 'js', 'go', 'rb', 'cs', 'as', 'php', 'pl', 'coffee', 'h', 'm', 'ts', 'kt', 'mjs', 'twig', 'htaccess', 'tpl', 'pt', 'scala', 's', 'erb', 'swf', 'asm', 'groovy', 'jsp', 'sh', 'hpp', 'phps', 'script', 'wscript', 'ldif', 'Tokens', 'nsi', 'tcl', 'idl', 'pyx', 'ps1', 'toml', 'inl', 'x', 'S', 'hbs']

# not code change
def filter_security_doc_commits(patch_list):
    filtered_patch_list = []
    for patch in patch_list:
        # print(patch)
        if 'github' in patch and 'commit/' in patch and '/pull/' in patch:
            # get_commit_diff:  https://github.com/twbs/bootstrap/pull/26630/commit/3ba186313e9e651bbd52a6a3a0305891dee0a621
            patch = patch.split('pull/')[0] + 'commit/' + patch.split('commit/')[-1]
        if 'github' in patch and 'commits/' in patch and '/pull/' in patch:
            # https://github.com/twbs/bootstrap/pull/26630/commits/3ba186313e9e651bbd52a6a3a0305891dee0a621
            patch = patch.split('pull/')[0] + 'commit/' + patch.split('commits/')[-1]

        if 'github' in patch and '/commit/' in patch:
            #https://github.com/Rich-Harris/devalue/commits?author=pi0
            #formaL_github_commit_url https://github.com/Rich-Harris/devalue/commits
            # request_specific_commit(owner,repo,commitID)
            # https://github.com/wsargent/playframework/commit/35905f45381de788743ba9546e5eee69fe1c332f#commitcomment-5505084",
            # https://github.com/lurcher/unixODBC/commit/45ef78e037f578b15fc58938a3a3251655e71d6f#diff-d52750c7ba4e594410438569d8e2963aL24
            # https://github.com/login?return_to=/qos-ch/slf4j/commit/d2b27fba88e983f921558da27fc29b5f5d269405
            # commitId = patch.split('commit/')[-1].split('#')[0]
            # owner = patch.split('github.com/')[-1].split('/')[0]
            # repo = patch.split('github.com/')[-1].split('/')[1]
            # res = github_util.request_specific_commit(owner,repo,commitId)
            # 2020-11-14 14:09:03,611 - INFO - ------------------------- url:https://api.github.com/repos/apache/tika/commits/426be73b9e7500fa3d441231fa4e473de3474=
            formaL_github_commit_url = patch.split('#')[0].strip('>').strip('=')
            if '?' in formaL_github_commit_url.split('commit')[1]:
                formaL_github_commit_url = formaL_github_commit_url.split('commit')[0] + 'commit'+formaL_github_commit_url.split('commit')[1].split('?')[0]
            # api.github
            formaL_github_commit_url = formaL_github_commit_url.replace('repos/','').replace('/commits/','/commit/')
            # print( 'formaL_github_commit_url', formaL_github_commit_url )
            processed_commit_data =  parse_github_commit.get_commit_diff(formaL_github_commit_url)
            if not processed_commit_data: continue
            commitID = processed_commit_data['commit_ID']
            modified_files = processed_commit_data[commitID].keys()
            for modified_file in modified_files:
                file_suffix = modified_file.split('.')[-1]
                if file_suffix in suffix_list:
                    filtered_patch_list.append(patch)
                    break
                else: # 说明非code change
                    # print('淦！')
                    # print(modified_file)
                    pass
        else: #说明是非 github commit的类型
            filtered_patch_list.append(patch)


    return filtered_patch_list

# test commit
def filter_security_test_commits(patch_list):
    filtered_patch_list = []
    for patch in patch_list:
        # print(patch)
        if 'github' in patch and 'commit/' in patch and '/pull/' in patch:
            # get_commit_diff:  https://github.com/twbs/bootstrap/pull/26630/commit/3ba186313e9e651bbd52a6a3a0305891dee0a621
            patch = patch.split('pull/')[0] + 'commit/' + patch.split('commit/')[-1]
        if 'github' in patch and 'commits/' in patch and '/pull/' in patch:
            # https://github.com/twbs/bootstrap/pull/26630/commits/3ba186313e9e651bbd52a6a3a0305891dee0a621
            patch = patch.split('pull/')[0] + 'commit/' + patch.split('commits/')[-1]

        if 'github' in patch and '/commit/' in patch:
            #https://github.com/Rich-Harris/devalue/commits?author=pi0
            #formaL_github_commit_url https://github.com/Rich-Harris/devalue/commits
            # request_specific_commit(owner,repo,commitID)
            # https://github.com/wsargent/playframework/commit/35905f45381de788743ba9546e5eee69fe1c332f#commitcomment-5505084",
            # https://github.com/lurcher/unixODBC/commit/45ef78e037f578b15fc58938a3a3251655e71d6f#diff-d52750c7ba4e594410438569d8e2963aL24
            # https://github.com/login?return_to=/qos-ch/slf4j/commit/d2b27fba88e983f921558da27fc29b5f5d269405
            # commitId = patch.split('commit/')[-1].split('#')[0]
            # owner = patch.split('github.com/')[-1].split('/')[0]
            # repo = patch.split('github.com/')[-1].split('/')[1]
            # res = github_util.request_specific_commit(owner,repo,commitId)
            # 2020-11-14 14:09:03,611 - INFO - ------------------------- url:https://api.github.com/repos/apache/tika/commits/426be73b9e7500fa3d441231fa4e473de3474=
            formaL_github_commit_url = patch.split('#')[0].strip('>').strip('=')
            if '?' in formaL_github_commit_url.split('commit')[1]:
                formaL_github_commit_url = formaL_github_commit_url.split('commit')[0] + 'commit'+formaL_github_commit_url.split('commit')[1].split('?')[0]
            # api.github
            formaL_github_commit_url = formaL_github_commit_url.replace('repos/','').replace('/commits/','/commit/')
            # print( 'formaL_github_commit_url', formaL_github_commit_url )
            processed_commit_data =  parse_github_commit.get_commit_diff(formaL_github_commit_url)
            if not processed_commit_data: continue
            commitID = processed_commit_data['commit_ID']
            modified_files = processed_commit_data[commitID].keys()
            for modified_file in modified_files:
                if 'test' in modified_file.lower(): continue
                else:
                    filtered_patch_list.append(patch)
                    break
        else: #说明是非 github commit的类型
            filtered_patch_list.append(patch)
    return filtered_patch_list

def filter_security_test_and_doc_commits(patch_list):
    filtered_patch_list = []
    for patch in patch_list:
        # print(patch)
        if 'github' in patch and 'commit/' in patch and '/pull/' in patch:
            # get_commit_diff:  https://github.com/twbs/bootstrap/pull/26630/commit/3ba186313e9e651bbd52a6a3a0305891dee0a621
            patch = patch.split('pull/')[0] + 'commit/' + patch.split('commit/')[-1]
        if 'github' in patch and 'commits/' in patch and '/pull/' in patch:
            # https://github.com/twbs/bootstrap/pull/26630/commits/3ba186313e9e651bbd52a6a3a0305891dee0a621
            patch = patch.split('pull/')[0] + 'commit/' + patch.split('commits/')[-1]

        if 'github' in patch and '/commit/' in patch:
            # https://github.com/Rich-Harris/devalue/commits?author=pi0
            # formaL_github_commit_url https://github.com/Rich-Harris/devalue/commits
            # request_specific_commit(owner,repo,commitID)
            # https://github.com/wsargent/playframework/commit/35905f45381de788743ba9546e5eee69fe1c332f#commitcomment-5505084",
            # https://github.com/lurcher/unixODBC/commit/45ef78e037f578b15fc58938a3a3251655e71d6f#diff-d52750c7ba4e594410438569d8e2963aL24
            # https://github.com/login?return_to=/qos-ch/slf4j/commit/d2b27fba88e983f921558da27fc29b5f5d269405
            # commitId = patch.split('commit/')[-1].split('#')[0]
            # owner = patch.split('github.com/')[-1].split('/')[0]
            # repo = patch.split('github.com/')[-1].split('/')[1]
            # res = github_util.request_specific_commit(owner,repo,commitId)
            # 2020-11-14 14:09:03,611 - INFO - ------------------------- url:https://api.github.com/repos/apache/tika/commits/426be73b9e7500fa3d441231fa4e473de3474=
            formaL_github_commit_url = patch.split('#')[0].strip('>').strip('=')
            if '?' in formaL_github_commit_url.split('commit')[1]:
                formaL_github_commit_url = formaL_github_commit_url.split('commit')[0] + 'commit' + \
                                           formaL_github_commit_url.split('commit')[1].split('?')[0]
            # api.github
            formaL_github_commit_url = formaL_github_commit_url.replace('repos/', '').replace('/commits/', '/commit/')
            # print( 'formaL_github_commit_url', formaL_github_commit_url )
            processed_commit_data = parse_github_commit.get_commit_diff(formaL_github_commit_url)
            if not processed_commit_data: continue
            commitID = processed_commit_data['commit_ID']
            modified_files = processed_commit_data[commitID].keys()
            for modified_file in modified_files:
                file_suffix = modified_file.split('.')[-1]
                if 'test' in modified_file.lower(): # 说明是test文件
                    continue
                elif file_suffix not in suffix_list: # 说明是doc修改，非code change
                    continue
                else:
                    filtered_patch_list.append(patch)
                    break
        elif 'git' in patch and re_util.extract_commitid_in_commit_url( patch): # other git commit type
            formaL_github_commit_url = patch
            processed_commit_data = parse_other_git_format.parse_other_git_format(formaL_github_commit_url)
            if not processed_commit_data or ('patch_type' not in processed_commit_data.keys()): # 说明无结果
                filtered_patch_list.append(patch)
            elif  processed_commit_data['patch_type'] == 'diff file': # 说明未搜索commit，也先不处理
                filtered_patch_list.append(patch)
            elif processed_commit_data['patch_type'] == 'github commit':
                # 同上 github commit处理方式
                commitID = processed_commit_data['commit_ID']
                modified_files = processed_commit_data[commitID].keys()
                for modified_file in modified_files:
                    file_suffix = modified_file.split('.')[-1]
                    if 'test' in modified_file.lower():  # 说明是test文件
                        continue
                    elif file_suffix not in suffix_list:  # 说明是doc修改，非code change
                        continue
                    else:
                        filtered_patch_list.append(patch)
                        break
        else:  # 说明是非 git commit的类型
            filtered_patch_list.append(patch)
    return filtered_patch_list
#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
-----------------------------------------
@Created: 2021/02/14
------------------------------------------
@Modify: 2021/02/14
------------------------------------------
@Description:

"""
import os,sys,re
_PROJECT_NAME = 'VulnerabilityAnalysis'
_CURRENT_ABSPATH = os.path.abspath(__file__)
sys.path.insert(0, _CURRENT_ABSPATH[:_CURRENT_ABSPATH.find(_PROJECT_NAME) + len(_PROJECT_NAME) + 1])

from vulnerability_analysis import config
from vulnerability_analysis.utility import re_util
l1_split_str = config.L1_SPLITE_STR
l2_split_str = config.L2_SPLITE_STR

import urllib.parse

class Node:
    """
    class Node
    Attributes:
            type = None                         # range: source, root_node, issue_url, patch_url, common_github_url, common_url ...
            category_in_type = None             # category_in_type, issue: git_issue ..... , patch: git_commit, svn, diff_file ....
            formatted_url = None                # formatted URL
            formatted_id = None                 # formatted URL or CVEID
            original_content = None             # original_content as init input
            flag_travelled = False
    """

    def __init__(self, node_content_type, node_content):
        """
        input url with tags, which will be formatted and cleared its type
        :param
            node_type: url, cveid, issue_id, commit_id
        """
        self.type = None  # range: source, root_node, issue_url, patch_url, common_github_url, common_url ...
        self.category_in_type = None  # category_in_type, issue: git_issue ..... , patch: github_commit, svn_commit ....
        self.formatted_url = None  # formatted URL
        self.formatted_id = None  # formatted URL or CVEID
        self.original_content = None  # original_content as init input
        self.flag_travelled = False

        if node_content_type == 'url': # is url
            identification_res = Node.identify_the_type_of_url(node_content)
            if identification_res:
                self.type = identification_res['type']
                self.formatted_id = identification_res['formatted_id']
                self.formatted_url = identification_res['formatted_url']
                self.category_in_type = identification_res['category_in_type']
                self.original_content = node_content
        elif node_content_type == 'cveid': # is CVEID
            self.type = 'root_node'
            self.formatted_id = node_content
            self.original_content = node_content
        elif node_content_type == 'source':
            self.type = 'source'
            self.formatted_id = node_content
            self.original_content = node_content
        elif node_content_type == 'issue_id':
            pass
        elif node_content_type == 'commit_id':
            pass

    @staticmethod
    def identify_the_type_of_url(url):
        # range: source, root_node, issue_url, patch_url, common_github_url, common_url ...
        is_patch_res = Node.is_patch_url(url)
        if is_patch_res: return is_patch_res
        is_issue_res = Node.is_issue_url(url)
        if is_issue_res: return is_issue_res
        is_common_github_res = Node.is_common_github_url(url)
        if is_common_github_res: return is_common_github_res

        # common,
        formatted_result = {}
        formatted_result['type'] = 'common_url'
        formatted_result['category_in_type'] = None
        formatted_result['formatted_url'] = Node.format_url(url)
        formatted_result['formatted_id'] = formatted_result['formatted_url']
        return formatted_result

    @staticmethod
    def identify_target_types_of_nodes(url_list, target_types):
        """
        identify url nodes of differernt types by url
        :param
            url_list: [],
            target_types: issue_url, patch_url, root_node, github_repo_url
        :return: [ Nodes ]
        """

        # todo, format target_types
        if target_types=='all':
            target_types = ['issue_url', 'patch_url', 'github_repo_url','common_url','common_github_url']
        # identify
        identified_target_nodes = []
        for url_ele in url_list:
            url_node_obj = Node(node_content_type='url', node_content=url_ele)
            if url_node_obj.type in target_types and url_node_obj not in identified_target_nodes:
                identified_target_nodes.append(url_node_obj)
            else:
                # todo, 对象内存回收
                pass
        return identified_target_nodes

    @staticmethod
    def is_issue_url(url):
        if not re.search(r'http(s)?://(([\w-]+\.)+\w+(:\d{1,5})?)', url): return False # 说明连域名都没有，非url
        ref = url
        # 整理ref 格式
        # ref = ref.replace('%2F', '/').replace('%2F', '/')
        ref = urllib.parse.unquote(ref) # url解码

        result = {}
        flag = 0  # 用于判断改ref是否是 issue
        url_domian = re.search(r'http(s)?://(([\w-]+\.)+\w+(:\d{1,5})?)', url).group(2)
        issuekey = None

        # black list
        # https://bugzilla.mozilla.org/show_bug.cgi?id=1150351 属于 advisory，非issue
        # https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-8014
        # bugs.debian.org/cgi-bin/bugreport.cgi?
        # https://bugs.gentoo.org/show_bug.cgi?id=317435
        # if 'bugzilla.mozilla.org/show_bug.cgi' in ref \
        #         or 'bugzilla.redhat.com/show_bug.cgi' in ref\
        #         or ('bugs.debian.org/' in ref and 'bugreport.cgi?' in ref) \
        #         or ('bugzilla.suse.com/' in ref and 'show_bug.cgi?' in ref) \
        #         or ('bugzilla.gnome.org/' in ref and 'show_bug.cgi?' in ref) \
        #         or ('bugs.gentoo.org/show_bug.cgi' in ref):
        if 'bugzilla.mozilla.org/show_bug.cgi' in ref\
                or 'bugzilla.redhat.com/' in ref\
                or ('bugs.debian.org/' in ref) \
                or ('bugzilla.suse.com/' in ref ) \
                or ('bugzilla.gnome.org/' in ref) \
                or ('bugs.gentoo.org/' in ref):
            return False

        """
         "https://bugs.eclipse.org/bugs/show_bug.cgi?id=535670"
         "https://bugzilla.readthedocs.org/en/5.0/using/understanding.html"
         "https://bugs.eclipse.org/bugs/request.cgi",
        """
        ## git_issue 规则
        # https://github.com/primefaces/primefaces/issues/5642
        if ('/issues/' in ref and '/github.com/' in ref):
            tem_ref = (ref.split(l1_split_str)[0].strip(')').strip(']'))
            can_issuekey = tem_ref.split('/issues/')[-1].split('/')[0].split('#')[0]
            if can_issuekey.isdigit():
                result['git_issue'] = tem_ref
                issuekey = can_issuekey
                flag = 1
        ## git_pull_request规则
        # https://github.com/unicode-org/icu/pull/971
        if ('/pull/' in ref and '/github.com/' in ref):
            tem_ref = (ref.split(l1_split_str)[0].strip(')').strip(']'))
            # 误报，'https://github.com/join?return_to=https://github.com/nodejs/node/pull/new/2227).&source=login/'
            if not tem_ref.split('/pull/')[-1].split('/')[0].isdigit(): return False # pull后紧跟ID号

            # 整理格式，https://github.com/tj/node-growl/pull/61/checks， https://github.com/tj/node-growl/pull/61/files
            format_ref = ''
            for ele in tem_ref.split('/'):
                if ele.isdigit():
                    format_ref +=ele + '/'
                    break
                else:
                    format_ref += ele + '/'
            result['git_pull_request'] = format_ref.strip('/')
            issuekey = format_ref.split('/pull/')[-1].split('/')[0].split('#')[0]
            flag = 1
        ## bugzilla规则
        if ('/bugzilla.' in ref or '/bugzilla/' in ref):
            if 'bugzilla.redhat.com' in ref: return False# https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-10897, 不为issue
            # 整理格式
            # 需要有issueid
            tem_ref = ref
            if len(re.findall('[0-9]{2,}', tem_ref)) > 0: # 'https://bugzilla.readthedocs.org/en/5.0/using/understanding.html__fdse__Help'
                result['bugzilla'] = tem_ref
                flag = 1
                issuekeys = re.findall('[0-9]{2,}', tem_ref)
                if issuekeys: issuekey = issuekeys[-1]
            else:
                return False
            result['bugzilla'] = (ref.split(l1_split_str)[0].strip(')').strip(']'))
            flag = 1
        ## jira规则
        if ('/jira.' in ref or '/jira/' in ref):
            tem_ref = str(ref) # 防止不符合这一项，却对原ref造成破坏
            # 整理格式，https://issues.apache.org/jira/login.jsp?os_destination=%2Fbrowse%2FOLINGO-1409, 该链接是由https://issues.apache.org/jira/browse/OLINGO-1409包含的，所以，可直接删去
            # https://issues.apache.org/jira/browse/OLINGO-1409?focusedCommentId=17005245&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel
            tem_ref = (tem_ref.split(l1_split_str)[0].strip(')').strip(']'))
            tem_ref = tem_ref.split('?')[0]
            if len(re.findall('[A-Z]+-[0-9]+', tem_ref)) > 0:
                result['jira'] = tem_ref
                flag = 1
                issuekeys = re.findall('[A-Z]+-[0-9]+', tem_ref)
                if issuekeys: issuekey = issuekeys[-1]
            else:
                return False
        ## other_issue_tracker
        if flag == 0 and ('/issues.' in ref or '/issues/' in ref or '/issue.' in ref or '/issue/' in ref):
                tem_ref = str(ref)  # 防止不符合这一项，却对原ref造成破坏
                # 整理格式，'http://issues.apache.org/buglist.cgi?chfieldfrom=24h'
                tem_ref = (tem_ref.split(l1_split_str)[0].strip(')').strip(']'))
                if 'filter=' in tem_ref.split('?')[-1]: # for https://tracker.phpbb.com/issues/?filter=15193
                    pass
                else: tem_ref = tem_ref.split('?')[0]
                if len(re.findall('[A-Z]+-[0-9]+', tem_ref.split('/issue')[-1])) > 0:
                    result['other_issue_tracker'] = tem_ref
                    flag = 1
                    issuekeys = re.findall('[0-9]+', tem_ref.split('/issue')[-1])
                    if issuekeys: issuekey = issuekeys[-1]
                elif len(re.findall('[0-9]+', tem_ref.split('/issue')[-1])) > 0:
                    result['other_issue_tracker'] = tem_ref
                    flag = 1
                    issuekeys = re.findall('[0-9]+', tem_ref.split('/issue')[-1])
                    if issuekeys: issuekey = issuekeys[-1]
                else:
                    return False
        if flag == 0 and ('/bugs.' in ref or '/bugs/' in ref):
                if 'attachment' in ref: return False# 'https://bugs.gentoo.org/attachment.cgi?id=215643__fdse__attachment 215643'
                tem_ref = str(ref)  # 防止不符合这一项，却对原ref造成破坏
                # 整理格式，'http://issues.apache.org/buglist.cgi?chfieldfrom=24h'
                tem_ref = (tem_ref.split(l1_split_str)[0].strip(')').strip(']'))
                # tem_ref = tem_ref.split('?')[0] # for 'https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=733108'
                tem_ref = tem_ref.split('#')[0] # for 'https://bugs.gentoo.org/show_bug.cgi?id=352864#c11__fdse__Comment 11'
                if len(re.findall('[0-9]{2,}', tem_ref.split('/bug')[-1])) > 0:
                    result['other_issue_tracker'] = tem_ref
                    flag = 1
                    issuekeys = re.findall('[0-9]{2,}', tem_ref.split('/bug')[-1])
                    if issuekeys: issuekey = issuekeys[-1]
                else:
                    return False
        if flag == 0 and ('/tickets.' in ref or '/tickets/' in ref):
                tem_ref = str(ref)  # 防止不符合这一项，却对原ref造成破坏
                # 整理格式，'http://tickets.opscode.com/browse/CHEF-1289'
                tem_ref = (tem_ref.split(l1_split_str)[0].strip(')').strip(']'))
                tem_ref = tem_ref.split('?')[0]
                if len(re.findall('[A-Z]+[0-9]{0,2}-[0-9]+', tem_ref.split('/tickets')[
                    -1])) > 0:  # 特殊 re表达式，for 'https://tracker.phpbb.com/browse/PHPBB30-13551'
                    result['other_issue_tracker'] = tem_ref
                    flag = 1
                    issuekeys = re.findall('[A-Z]+[0-9]{0,2}-[0-9]+', tem_ref.split('/tickets')[-1])
                    if issuekeys: issuekey = issuekeys[-1]
                else:
                    return False
        if flag == 0 and ('/tracker.' in ref or '/tracker/' in ref):
                tem_ref = str(ref)  # 防止不符合这一项，却对原ref造成破坏
                # 整理格式，'http://tickets.opscode.com/browse/CHEF-1289'
                tem_ref = (tem_ref.split(l1_split_str)[0].strip(')').strip(']'))
                tem_ref = tem_ref.split('?')[0]
                if len(re.findall('[A-Z]+[0-9]{0,2}-[0-9]+', tem_ref.split('/tracker')[-1])) > 0: # 特殊 re表达式，for 'https://tracker.phpbb.com/browse/PHPBB30-13551'
                    result['other_issue_tracker'] = tem_ref
                    flag = 1
                    issuekeys = re.findall('[A-Z]+[0-9]{0,2}-[0-9]+', tem_ref.split('/tracker')[-1])
                    if issuekeys: issuekey = issuekeys[-1]
                else:
                    return False

        # TODO, 详细分类否？
        ## other_issue_tracker
        # https://svn.apache.org/viewvc?view=rev&rev=1777472 CVE-2016-8745
        # if flag == 0 and ('Issue Tracking' in ref):
        #     result['issue_tag'] = (ref.split(l1_split_str)[0].strip(')').strip(']'))
        #     flag = 1

        if flag==1 and result:
            formatted_result = {}
            formatted_result['type'] = 'issue_url'
            formatted_result['category_in_type'] = list(result.keys())[-1]
            url = result[formatted_result['category_in_type']]
            formatted_result['formatted_url'] = Node.format_url( url )
            if issuekey: formatted_result['formatted_id'] = url_domian + l1_split_str + issuekey
            else: formatted_result['formatted_id'] = formatted_result['formatted_url']
            """
            如果 issuekey可以有效提取出来：
            formatted_result['formatted_id'] = 域名 + issuekey/issueID, 防止重复，比如：
            'https://issues.apache.org/jira/si/jira.issueviews:issue-word/OLINGO-1409/OLINGO-1409.doc'
            'https://issues.apache.org/jira/si/com.atlassian.jira.plugins.jira-importers-plugin:issue-json/OLINGO-1409/OLINGO-1409.json'
            """
            return formatted_result
        else: return False

    @staticmethod
    def is_patch_url(url):
        ref = url.split(l1_split_str)[0]
        result = {}
        patch_formatted_id = None

        request_black_str_list = ['.zip', '.gz', '.tgz', '.google.', '.msi', '.exe', '.tar', '.iso', '.sha256', '.asc',
                                  '.xz', '.atom', '.pdf']
        # 去除奇奇怪怪的误识别
        for black_str in request_black_str_list :
            if black_str in ref: return False
        # 非url直接撤
        if len(re.findall('http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+', ref)) ==0: return False
        # issue 相关，直接撤
        # https://bugs.debian.org/cgi-bin/version.cgi?found=edid-decode/0.1~git20140128.afcf2a2e
        if 'https://bugs.debian.org/' in ref: return False
        # https://github.com/pypa/pip/issues/bca635a1
        if ( 'github' in ref and 'commit' not in ref ): return False

        # 整理ref 格式
        # ref = ref.replace('%2F', '/').replace('%3A', ':')
        ref = urllib.parse.unquote(ref)  # url解码

        flag_patch = 0
        # Todo
        ## git commit 规则
        """
            https://github.com/apache/tomcat/commit/40fa74c74822711ab878079d0a69f7357926723d
            https://github.com/zephyrproject-rtos/zephyr/pull/23821/commits/11b7a37d9a0b438270421b224221d91929843de4  / https://github.com/u-boot/u-boot/commits/master /'https://github.com/tj/node-growl/pull/61/commits'
            https://sourceware.org/git/gitweb.cgi?p=glibc.git;a=commit;h=9333498794cde1d5cca518badf79533a24114b6f
            https://git.qemu.org/?p=qemu.git;a=commit;h=de0b1bae6461f67243282555475f88b2384a1eb9
            http://git.moodle.org/gw?p=moodle.git&a=search&h=HEAD&st=commit&s=MDL-68410
        """
        # blob "https://github.com/borgbackup/borg/blob/6916d1b3bc8d25d9e6f6254459abd3e21f4dc1e3"
        if ('/github.com/' in ref and 'blob/' in ref) or ( 'gist.' in ref): return False
        # https://github.com/pediapress/pyfribidi/issues/2
        if  ('/github.com/' in ref and 'issues/' in ref): return False
        # https://user-images.githubusercontent.com/39950310/49497761-2db59500
        if ('github' in ref and 'commit' not in ref): return False


        # https://source.codeaurora.org/quic/le/meta-qti-bsp/commit/?id=ecd2fb4ab9e2a6851add554af03cebe337345c44
        # 'https://lab.louiz.org/poezio/slixmpp/commit/7cd73b594e8122dddf847953fcfc85ab4d316416's
        if ('/commits/' in ref and '/bitbucket.org/' in ref and len(re.findall(r'(?![0-9]{6,40})(?![a-f]{6,40})[0-9a-f]{6,40}', ref))>0)\
                or ('/commit/' in ref and '/lab.louiz.org/' in ref and len(re.findall(r'(?![0-9]{6,40})(?![a-f]{6,40})[0-9a-f]{6,40}', ref))>0)\
                or ('/commit/' in ref and 'dulwich.io/' in ref and len(re.findall(r'(?![0-9]{6,40})(?![a-f]{6,40})[0-9a-f]{6,40}', ref))>0)\
                or ('/commit/' in ref and 'source.codeaurora.org/' in ref and len(re.findall(r'(?![0-9]{6,40})(?![a-f]{6,40})[0-9a-f]{6,40}', ref))>0):
            format_ref = 'http' + ref.split('http')[-1]  # 取最后http
            # commitID = re.findall('(?<![0-9a-f])(?![0-9]{6,40})(?![a-f]{6,40})([0-9a-f]{6,40})(?![0-9a-f])') # 用于网页中识别commit ID
            commitID = re.findall(r'(?![0-9]{6,40})(?![a-f]{6,40})[0-9a-f]{6,40}', format_ref)  # 用于url内部识别
            # commitID = re_util.extract_commitid_in_commit_url(format_ref)
            # commitID = [commitID]
            if not commitID:
                False
            else:
                result['git_commit'] = format_ref[:format_ref.find(commitID[0])] + commitID[0]
                flag_patch = 1
                patch_formatted_id = format_ref.split('commit')[0] + 'commit/' + commitID[0][:6]

        if ('/commits/' in ref and '/github.com/' in ref and '/pull/' in ref):
            format_ref = 'http' + ref.split('http')[-1]  # 取最后http
            format_ref = format_ref.split('?')[0].split('#')[0].split('&')[0]
            # commitID = re.findall('(?<![0-9a-f])(?![0-9]{6,40})(?![a-f]{6,40})([0-9a-f]{6,40})(?![0-9a-f])') # 用于网页中识别commit ID
            commitID = re.findall(r'(?![0-9]{6,40})(?![a-f]{6,40})[0-9a-f]{6,40}', format_ref)  # 用于url内部识别
            # commitID = re_util.extract_commitid_in_commit_url(format_ref)
            # commitID = [commitID]
            if not commitID:
                False
            else:
                result['git_commit'] = format_ref[:format_ref.find(commitID[0])] + commitID[0]
                flag_patch = 1
                # patch_formatted_id = format_ref.split('pull')[0] +'commit/' + commitID[0][:6]
                # repo_name = format_ref.split('/github.com/')[-1].split('/')[1]
                # patch_formatted_id = repo_name.lower() + '_' + commitID[0][:6]
                patch_formatted_id = commitID[0][:6]
        if ('/commit/' in ref and '/github.com/' in ref):
            # 'https://github.com/django/django/commit/d5d8942a160685c403d381a279e72e09de5489a9?branch=d5d8942a160685c403d381a279e72e09de5489a9&diff=unified__fdse__    Unified'
            # 'http://code.djangoproject.com/login?return_to=https%3A//github.com/django/django/commit/d5d8942a16'
            # 'https://github.com/django/django/commit/85207a245bf09fdebe486b4c7bbcb65300f2a693?branch=85207a245bf09fdebe486b4c7bbcb65300f2a693&diff=split'
            # 'https://github.com/django/django/commit/732198ed5c2a127249970e0cd4218d093a38e9a2?branch=732198ed5c2a127249970e0cd4218d093a38e9a2&diff=split'
            if 'http:' in ref:
                format_ref = 'http:' + ref.split('http:')[-1] # 取最后http
            if 'https:' in ref:
                format_ref = 'https:' + ref.split('https:')[-1]  # 取最后http
            format_ref = format_ref.split('?')[0].split('#')[0].split('&')[0]
            # commitID = re.findall('(?<![0-9a-f])(?![0-9]{6,40})(?![a-f]{6,40})([0-9a-f]{6,40})(?![0-9a-f])') # 用于网页中识别commit ID
            commitID = re.findall(r'(?![0-9]{6,40})(?![a-f]{6,40})[0-9a-f]{6,40}', format_ref) # 用于url内部识别
            # commitID = re_util.extract_commitid_in_commit_url( format_ref ) # 用于url内部识别
            # commitID = [commitID]
            if not commitID: False
            else:
                result['git_commit'] = format_ref[ :format_ref.find( commitID[0] )] + commitID[0]
                flag_patch = 1
                # patch_formatted_id = format_ref[ :format_ref.find( commitID[0] )] + commitID[0][:6]
                # repo_name = format_ref.split('/github.com/')[-1].split('/')[1]
                # patch_formatted_id = repo_name.lower() + '_' + commitID[0][:6]
                patch_formatted_id = commitID[0][:6]
        if flag_patch == 0 \
                and ( (';a=commit' in ref) or ('st=commit' in ref) or ('/commit' in ref and '/git' in ref) ):
            # 反例 https://git.openstack.org/cgit/openstack/neutron/commit?style=split
            commitID = re.findall(r'(?![0-9]{6,40})(?![a-f]{6,40})[0-9a-f]{6,40}', ref)  # 用于url内部识别
            if commitID:
                result['git_commit'] = (ref.split(l1_split_str)[0])
                flag_patch = 1
                # 针对 CVE-2015-5312， https://git.gnome.org/browse/libxml2/commit/?id=709a952110e98621c9b78c4f26462a9d8333102e
                # https://git.gnome.org/browse/libxml2/commit?id=709a952110e98621c9b78c4f26462a9d8333102e
                format_ref = ref.replace('/?', '?')
                patch_formatted_id = format_ref[:format_ref.find(commitID[0])] + commitID[0][:6]
            else:
                # http://git.openssl.org/gitweb/?p=openssl.git;a=commit;h=34628967f1e65dc8f34e000f0f5518e21afbfc7b
                for c in ref.split('commit')[-1].split(l1_split_str)[0]:
                    if c.isdigit():  # 说明有数字，有id号
                        result['git_commit'] = (ref.split(l1_split_str)[0])
                        flag_patch = 1
                        format_ref = ref.replace('/?', '?')
                        break
            # if flag_patch==1:
            #     format_ref = ref.replace('/?', '?')
            #     commitID = re.findall(r'(?![0-9]{6,40})(?![a-f]{6,40})[0-9a-f]{6,40}', format_ref)  # 用于url内部识别
            #     # commitID = re_util.extract_commitid_in_commit_url(format_ref)
            #     # commitID = [commitID]
            #     patch_formatted_id = format_ref[:format_ref.find(commitID[0])] + commitID[0][:6]
        # https://pagure.io/389-ds-base/c/9724e8bb1
        if flag_patch == 0 and re.search(r'/c/(?![0-9]{6,40})(?![a-f]{6,40})[0-9a-f]{6,40}',ref):
            format_ref = 'http' + ref.split('http')[-1]  # 取最后http
            format_ref = format_ref.split('?')[0].split('#')[0].split('&')[0]
            commitID = re.findall(r'(?![0-9]{6,40})(?![a-f]{6,40})[0-9a-f]{6,40}', format_ref)  # 用于url内部识别
            # commitID = re_util.extract_commitid_in_commit_url(format_ref)
            # commitID = [commitID]
            if not commitID:
                False
            else:
                result['git_commit'] = format_ref[:format_ref.find(commitID[0])] + commitID[0]
                flag_patch = 1
                patch_formatted_id = format_ref[:format_ref.find(commitID[0])] + commitID[0][:6]
        if flag_patch == 0 and ( 'git' in ref and re.search(r'(?![0-9]{6,40})(?![a-f]{6,40})[0-9a-f]{6,40}',ref) ):
            # https://user-images.githubusercontent.com/39950310/49497761-2db59500
            # https://lists.apache.org/thread.html/8a20e48acb2a40be5130df91cf9d39d8ad93181989413d4abcaa4914@<dev.tomcat.apache.org>#tomcat.git
            if not ref.split('git')[-1] or ref.split('git')[-1][0].isalnum(): return False # git 右边的字符是字母
            if 'http:' in ref:
                format_ref = 'http:' + ref.split('http:')[-1]  # 取最后http
            if 'https:' in ref:
                format_ref = 'https:' + ref.split('https:')[-1]  # 取最后http
            format_ref = format_ref.split('#')[0].split('&')[0]
            commitID = re.findall(r'(?![0-9]{6,40})(?![a-f]{6,40})[0-9a-f]{6,40}', format_ref)  # 用于url内部识别
            # commitID = re_util.extract_commitid_in_commit_url(format_ref)
            # commitID = [commitID]
            if not commitID:
                False
            else:
                result['git_commit'] = format_ref[:format_ref.find(commitID[0])] + commitID[0]
                flag_patch = 1
                patch_formatted_id = format_ref[:format_ref.find(commitID[0])] + commitID[0][:6]

        # TODO
        ## svn规则
        """ 
            https://svn.apache.org/viewvc?view=rev&rev=1777472 CVE-2016-8745
            "https://svn.apache.org/repos/asf/geronimo/server/tags/geronimo-2.1.6/RELEASE_NOTES-2.1.6.txt"
        """
        if ('/svn.' in ref and 'rev=' in ref) or ('/svn.' in ref and '/r' in ref.replace('repos', '_')) or (
                '/svn.' in ref and 'revision' in ref):
            svn_id = re_util.extract_commitid_in_svn_url(ref.split(l1_split_str)[0])
            if svn_id:
                result['svn'] = (ref.split(l1_split_str)[0])
                flag_patch = 1
                patch_formatted_id = 'svn_' + svn_id

        # TODO
        ## diff file规则
        # if ('.patch' in ref.lower()) or ('.diff' in ref.lower()):
        if ref.endswith('.patch') or ref.endswith('.diff'):
            result['diff_file'] = (ref.split(l1_split_str)[0])
            flag_patch = 1

        # redhat attachment, url 转换 及去重
        # https://bugzilla.redhat.com/attachment.cgi?id=14727&action=diff
        # https://bugzilla.mozilla.org/attachment.cgi?id=361765&action=edit
        # 'https://bugs.gentoo.org/attachment.cgi?id=215643__fdse__attachment 215643'
        if ('redhat.com/attachment' in ref and '&action=' in ref) \
                or ('mozilla.org/attachment' in ref and '&action=' in ref) \
                or ('bugs.gentoo.org/attachment' in ref and re.search('[0-9]{4,}', ref) )\
                or ('/attachment' in ref and '&action=' in ref):
            if l1_split_str in ref:
                ref = ref.split('&action=')[0] + l1_split_str + ref.split(l1_split_str)[1]
            else:
                ref = ref.split('&action=')[0]
            result['diff_file'] = (ref.split(l1_split_str)[0])
            flag_patch = 1

        if flag_patch==1 and result:
            formatted_result = {}
            formatted_result['type'] = 'patch_url'
            formatted_result['category_in_type'] = list(result.keys())[-1]
            url = result[formatted_result['category_in_type']]
            formatted_result['formatted_url'] = Node.format_url(url)
            formatted_result['formatted_id'] = patch_formatted_id if patch_formatted_id else formatted_result['formatted_url']
            return formatted_result
        else: return False

    @staticmethod
    def is_common_github_url(url):
        flag_common_github_url = 0
        ref = url
        result = {}

        ref = ref.split(l1_split_str)[0]
        if 'github.com/' in ref and len(ref.split('github.com/')[-1].split('/'))>1:
            flag_common_github_url = 1
            result['common_github_url'] = ref

        if flag_common_github_url == 1 and result:
            formatted_result = {}
            formatted_result['type'] = 'common_github_url'
            formatted_result['category_in_type'] = list(result.keys())[-1]
            url = result[formatted_result['category_in_type']]
            formatted_result['formatted_url'] = Node.format_url(url)
            formatted_result['formatted_id'] = formatted_result['formatted_url']
            return formatted_result
        else:
            return False

    @staticmethod
    def format_url(url):
        # 去除 分割符__fdse__ 以后内容
        formal_url = url.split(l1_split_str)[0]
        # 去除 ‘#’ 以后内容
        # ('https://github.com/marshyski/example/issues/251', 1, 'https://github.com/marshyski/example/issues/251#event-2321575465')
        formal_url = formal_url.split('#')[0]
        # 去除 ‘</link>’ 以后内容, </a></p></comment>
        # 'https://issues.apache.org/jira/browse/OLINGO-1409</link>'
        formal_url = formal_url.split('</')[0]
        return formal_url

def is_patch_test():
    # 正误
    print('Teste cases for: False')
    tcs = [
        'https://github.com/tj/node-growl/pull/61/commits',
        'https://github.com/tj/node-growl/pull/61/commits__fdse__      Commits\n\n  2',
        'https://svn.apache.org/repos/asf/geronimo/server/tags/geronimo-2.1.6/RELEASE_NOTES-2.1.6.txt',
        'https://svn.apache.org/repos/infra/websites/production/activemq/con=',
        'https://svn.apache.org/repos/asf/poi/tags/REL_4_1_1/KEYS',
        'https://planet.gentoo.org/',
        'https://github.com/jhy/jsoup/pull/582#ref-commit-4edb789',
        'https://issues.apache.org/jira/secure/attachment/12991357/image-2020-01-20-14-51-26-411.png',
        'https://gist.github.com/asanso/fa25685348051ef6a28d49aa0f27a4ae',
        'https://github.com/borgbackup/borg/blob/6916d1b3bc8d25d9e6f6254459abd3e21f4dc1e3',
        'https://github.com/pediapress/pyfribidi/issues/2',
        'https://user-images.githubusercontent.com/39950310/49497761-2db59500',
        'https://github.com/AFNetworking/AFNetworking/pull/1564/files/44ec25b01bfe8205d8bc585b437167db5bb3a051',
        'https://github.com/pypa/pip/issues/bca635a1',
        'https://github.com/pediapress/pyfribidi/issues/2',
        'https://user-images.githubusercontent.com/39950310/49497761-2db59500',
        'https://github.com/pypa/pip/issues/bca635a1',
        'https://github.com/idomic/cpython/commits/bpo-10572-testlibs/Lib/test/tkinter_test/test_tkinter/test_widgets.py'
    ]
    for tc in tcs:
        res = Node.is_patch_url(url=tc)
        print(res == False)

    print('Teste cases for: True')
    tcs = [
        "http://svn.apache.org/viewvc/kylin/site/docs/security.html?rev=1879879&r1=1879878&r2=1879879&view=diff",
        "http://svn.apache.org/viewvc/kylin/site/feed.xml?rev=1879879&r1=1879878&r2=1879879&view=diff",
        "http://svn.apache.org/viewvc?rev=1879879&view=rev",
        "https://svn.apache.org/viewvc?view=rev&rev=1809673",
        "https://svn.apache.org/viewvc?view=rev&rev=1725263",
        'https://pagure.io/389-ds-base/c/9724e8bb1',
        'https://gitweb.torproject.org/tor.git/commit/?id=43414eb98821d3b5c6c65181d7545ce938f82c8e',
        'http://git.gnome.org/browse/gimp/commit/?id=48ec15890e1751dede061f6d1f469b6508c13439',
        'http://git-wip-us.apache.org/repos/asf/cxf/commit/d9e2a6e7',
        'https://fisheye6.atlassian.com/changelog/camel-git?cs=341d4e6cca71c53c90962d1c3d45fc9e05cc50c6',
        'https://bugzilla.redhat.com/attachment.cgi?id=316093&action=diff',
        'https://projects.theforeman.org/attachments/855/0001-fixes-6086-CVE-2014-0007-fixed-TFTP-boot-API-remote-.patch',
        'https://bugs.gentoo.org/attachment.cgi?id=215643__fdse__attachment 215643'
    ]
    for tc in tcs:
        res = Node.is_patch_url(url=tc)
        print(res != False)

    # tc2 = 'https://github.com/pypa/pip/issues/bca635'
    # res = Node.is_patch_url(url=tc2)
    # print(res)

    # 格式
    tc2 = 'https://github.com/apache/olingo-odata4/commit/c3f982db3d97e395d313ae8f231202bb2139882c</a></p></comment>'
    res = Node.is_patch_url(url=tc2)
    print(res['formatted_url'] == 'https://github.com/apache/olingo-odata4/commit/c3f982db3d97e395d313ae8f231202bb2139882c' if res else False)
    # 'https://github.com/django/django/commit/d5d8942a160685c403d381a279e72e09de5489a9?branch=d5d8942a160685c403d381a279e72e09de5489a9&diff=unified__fdse__    Unified'
    # 'http://code.djangoproject.com/login?return_to=https%3A//github.com/django/django/commit/d5d8942a16'
    # 'https://github.com/django/django/commit/85207a245bf09fdebe486b4c7bbcb65300f2a693?branch=85207a245bf09fdebe486b4c7bbcb65300f2a693&diff=split'
    tc2 = 'https://github.com/django/django/commit/d5d8942a160685c403d381a279e72e09de5489a9?branch=d5d8942a160685c403d381a279e72e09de5489a9&diff=unified__fdse__    Unified'
    res = Node.is_patch_url(url=tc2)
    print(res['formatted_url']=='https://github.com/django/django/commit/d5d8942a160685c403d381a279e72e09de5489a9' if res else False)
    tc2 = 'http://code.djangoproject.com/login?return_to=https%3A//github.com/django/django/commit/d5d8942a16'
    res = Node.is_patch_url(url=tc2)
    print(res['formatted_url'] == 'https://github.com/django/django/commit/d5d8942a16' if res else False)
    tc2 = 'https://github.com/django/django/commit/85207a245bf09fdebe486b4c7bbcb65300f2a693?branch=85207a245bf09fdebe486b4c7bbcb65300f2a693&diff=split'
    res = Node.is_patch_url(url=tc2)
    print(res['formatted_url'] == 'https://github.com/django/django/commit/85207a245bf09fdebe486b4c7bbcb65300f2a693' if res else False)
    tc2 = 'https://github.com/django/django/commit/732198ed5c2a127249970e0cd4218d093a38e9a2?branch=732198ed5c2a127249970e0cd4218d093a38e9a2&diff=split'
    res = Node.is_patch_url(url=tc2)
    print(res['formatted_url'] == 'https://github.com/django/django/commit/732198ed5c2a127249970e0cd4218d093a38e9a2' if res else False)
    tc = 'https://pagure.io/389-ds-base/c/9724e8bb1'
    res = Node.is_patch_url(url=tc)
    print(res['formatted_url'] == 'https://pagure.io/389-ds-base/c/9724e8bb1' if res else False)
    tc = 'https://fisheye6.atlassian.com/changelog/camel-git?cs=341d4e6cca71c53c90962d1c3d45fc9e05cc50c6'
    res = Node.is_patch_url(url=tc)
    print(res['formatted_url'] == 'https://fisheye6.atlassian.com/changelog/camel-git?cs=341d4e6cca71c53c90962d1c3d45fc9e05cc50c6' if res else False)
    tc = 'https://github.com/restify/node-restify/pull/1031/commits/a015067232ad62aa035675dc63a46dce31fed3f3__fdse__a015067'
    res = Node.is_patch_url(url=tc)
    print(res['formatted_id'] == 'a01506' if res else False)
    tc = 'https://bugs.gentoo.org/attachment.cgi?id=215643__fdse__attachment 215643'
    res = Node.is_patch_url(url=tc)
    print(res['formatted_id'] == 'https://bugs.gentoo.org/attachment.cgi?id=215643' if res else False)
    tc = 'https://github.com/jnunemaker/httparty/commit/53a812426dd32108d6cba4272b493aa03bc8c031__fdse__xx'
    res = Node.is_patch_url(url=tc)
    print(res['formatted_url'] == 'https://github.com/jnunemaker/httparty/commit/53a812426dd32108d6cba4272b493aa03bc8c031' if res else False)
    tc = 'https://github.com/Legrandin/pycrypto/commit/9f912f13df99ad3421eff360d6a62d7dbec755c2__fdse__https://github.com/Leg...'
    res = Node.is_patch_url(url=tc)
    print(res['formatted_id'] == '9f912f' if res else False)
    tc = 'https://bitbucket.org/butor-team/portal/commits/cd7055d33e194fcf530100ee1d8d13aa9cde230b'
    res = Node.is_patch_url(url=tc)
    print(res['formatted_id'] == 'https://bitbucket.org/butor-team/portal/commit/cd7055' if res else False)
    tc = 'https://source.codeaurora.org/quic/le/meta-qti-bsp/commit/?id=e1a95254dd0ec874f884160aaf0f5ce7947a06c8'
    res = Node.is_patch_url(url=tc)
    print(res['formatted_id'] == 'https://source.codeaurora.org/quic/le/meta-qti-bsp/commit/e1a952' if res else False)
    tc = 'https://github.com/ImageMagick/ImageMagick/commit/2c75f301d9ac84f91071393b02d8c88c8341c91c__fdse__https://github.com/'
    res = Node.is_patch_url(url=tc)
    print(res['formatted_id'] == '2c75f3' if res else False)
    tc = 'https://github.com/openssl/openssl/commit/470990fee0182566d439ef7e82d1abf18b7085d7__fdse__'
    res = Node.is_patch_url(url=tc)
    print( True if res and res['formatted_id'] == '470990' else (res['formatted_id'],tc) )
    tc = 'http://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=3462896__fdse__from comment content'
    res = Node.is_patch_url(url=tc)
    print( True if res and res['formatted_id'] == 'http://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=3462896' else (res['formatted_id'],tc) )


def is_issue_test():
    # False
    tcs = [
        'https://issues.apache.org/jira/s/76e2e0ef77c870392faf3ad5edba7773-CDN/mkyotb/803005/bdb26e53b5dabdebb2a74849ead50650/0a4716d29b2d5b1bdcdb168b4efc119e/_/download/contextbatch/js/_super/batch.js?locale=en-UK',
       'https://issues.apache.org/jira/secure/Dashboard.jspa',
       'https://issues.apache.org/jira/',
       'http://issues.apache.org/enter_bug.cgi',
       'http://issues.apache.org/buglist.cgi?chfieldfrom=24h',
       'https://github.com/canonical-websites/www.ubuntu.com/issues/new?body=%0a%0a%0a---%0a*Reported%20from:%20https://ubuntu.com/security/notices/USN-1040-1*',
       'https://bugzilla.novell.com/',
       'https://bugzilla.novell.com/describecomponents.cgi',
       'https://bugzilla.novell.com/describecomponents.cgi',
       'https://bugzilla.novell.com/describecomponents.cgi?product=Baracus',
       "https://issues.apache.org/jira/browse/uima",
       "https://bugzilla.readthedocs.org/en/5.0/using/understanding.html__fdse__Help",
       'https://bugs.gentoo.org/buglist.cgi?component=Vulnerabilities&product=Gentoo%20Security&bug_status=__open____fdse__show other bugs',
       'https://bugs.gentoo.org/attachment.cgi?id=215643__fdse__attachment 215643',
       'https://bugs.eclipse.org/bugs/attachment.cgi?bugid=535670&action=enter',
       'https://github.com/join?return_to=https://github.com/nodejs/node/pull/new/2227).&source=login',
       'http://bugs.jqueryui.com/timeline?from=2012-11-17T22%3A23%3A23-05%3A00&precision=second__fdse__8 years ago',
       'https://bugzilla.mozilla.org/show_bug.cgi?id=1150351',
       'https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=733108',
        'https://bugs.gentoo.org/show_bug.cgi?id=352864#c11__fdse__Comment 11',
        'https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=733108'
    ]
    print('Teste cases for: False')
    for tc1 in tcs:
        res = Node.is_issue_url(url=tc1)
        if res: print(tc1)
    # tc = 'http://bugs.jqueryui.com/timeline?from=2012-11-17T22%3A23%3A23-05%3A00&precision=second__fdse__8 years ago'
    # res = Node.is_issue_url(url=tc)
    # print(res['formatted_id'] == 'issues.apache.org__fdse__OLINGO-1409' if res else False)

    print('Teste cases for: True')
    # True
    tcs = ['http://tickets.opscode.com/browse/CHEF-1289',
           'https://projects.puppetlabs.com/issues/13511',
           'https://pagure.io/389-ds-base/issue/50329',
           'https://tracker.phpbb.com/issues/?filter=15193',
           'https://tracker.phpbb.com/browse/PHPBB3-13551',
           'https://bugs.eclipse.org/bugs/show_bug.cgi?id=535670&GoAheadAndLogIn=1',
           'https://bugs.eclipse.org/bugs/show_bug.cgi?ctype=xml&id=535670',
           'https://github.com/apache/thrift/pull/1606/files/7a5e21'
           ]
    for tc1 in tcs:
        res = Node.is_issue_url(url=tc1)
        if not res: print('fail',tc1)
    # tc = 'https://tracker.phpbb.com/issues/?filter=15193'
    # res = Node.is_issue_url(url=tc)
    # print(res)

    # 格式
    # https://bugzilla.novell.com/747657 https://bugzilla.novell.com/show_bug.cgi?id=747657&GoAheadAndLogIn=1
    tc1 = 'https://issues.apache.org/jira/browse/OLINGO-1409'
    res = Node.is_issue_url(url=tc1)
    print(res['formatted_id']=='issues.apache.org__fdse__OLINGO-1409' if res else False)
    tc1 = 'https://issues.apache.org/jira/browse/OLINGO-1409</link>'
    res = Node.is_issue_url(url=tc1)
    print(res['formatted_id'] == 'issues.apache.org__fdse__OLINGO-1409' if res else False)
    tc1 = 'https://projects.puppetlabs.com/issues/13511'
    res = Node.is_issue_url(url=tc1)
    print(res['formatted_id'] == 'projects.puppetlabs.com__fdse__13511' if res else False)
    # tc1 = 'https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=733108'
    # res = Node.is_issue_url(url=tc1)
    # print(res['formatted_id'] == 'bugs.debian.org__fdse__733108' if res else False)
    tc1 = 'https://tracker.phpbb.com/issues/?filter=15193'
    res = Node.is_issue_url(url=tc1)
    print(res['formatted_id'] == 'tracker.phpbb.com__fdse__15193' if res else False)
    tc1 = 'https://tracker.phpbb.com/browse/PHPBB3-13551'
    res = Node.is_issue_url(url=tc1)
    print(res['formatted_id'] == 'tracker.phpbb.com__fdse__PHPBB3-13551' if res else False)
    tc1 = 'https://bugs.eclipse.org/bugs/show_bug.cgi?id=535670&GoAheadAndLogIn=1'
    res = Node.is_issue_url(url=tc1)
    print(res['formatted_id'] == 'bugs.eclipse.org__fdse__535670' if res else False)



if __name__ == '__main__':
    # url = 'https://github.com/tj/node-growl/issues/60'
    # res = Node.identify_target_types_of_nodes([url])
    # print(res.formatted_id)
    print('is_issue_test:')
    is_issue_test()
    # print( 'is_patch_test:')
    # is_patch_test()

    # Node(node_content_type='url',node_content='https://github.com/pmd/pmd/pull/592__fdse__#592')
